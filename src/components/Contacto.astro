---

---

<section id="contacto" class="max-w-7xl m-auto mb-12">
  <h2 class="title-section">Contacto</h2>

  <div
    class="flex flex-col md:flex-row justify-center items-start gap-6 bg-principal rounded-md md:w-1/2 m-auto px-10 pt-5"
  >
    <div class="w-full py-5 px-5 border-dorado rounded-md border box-border">
      <form action="" method="post" novalidate>
        <div>
          <label for="name" class="text-dorado font-inter font-light text-xl"
            >Tu nombre</label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            minlength="2"
            class="input-form"
          />

          <p class="error-msg hidden">Por favor ingresa tu nombre</p>
        </div>
        <div>
          <label for="name" class="text-dorado font-inter font-light text-xl"
            >Tu correo</label
          >
          <input
            type="email"
            id="email"
            name="email"
            required
            class="input-form"
          />

          <p class="error-msg hidden">Por favor ingresa tu Email</p>
        </div>
        <div>
          <label
            for="message"
            class="text-dorado font-inter font-light text-xl w-full"
            >Tu mensaje</label
          >
          <textarea
            id="message"
            name="message"
            required
            class="input-form h-32 resize-none"></textarea>

          <p class="error-msg hidden">El mensaje no puede estar vacio</p>
        </div>
        <button
          type="submit"
          class="mt-3 bg-dorado rounded-sm px-5 py-3 text-principal hover:bg-dorado hover:saturate-150 transition cursor-pointer font-inter font-medium text-sm w-full"
        >
          Enviar Mensaje
        </button>
      </form>

      <div
        id="success-message"
        class="mt-2.5 p-3 bg-green-500/20 text-success border border-success rounded text-sm shadow-lg transition-opacity duration-500 opacity-0"
      >
        ‚úÖ Mensaje enviado correctamente
      </div>
    </div>

    <div class="flex flex-col gap-2 w-full">
      <h3 class="text-dorado font-playfair text-xl">Informaci√≥n</h3>
      <p class="text-gris font-inter text-md font-light">
        Reserva tu cita o cont√°ctanos por los siguientes medios:
      </p>

      <ul class="flex flex-col gap-3 my-3">
        <li
          class="hover:bg-dorado rounded-xl p-1 transition duration-200 [&:hover>nav>a>span]:text-principal"
        >
          <nav area-label="whatsapp">
            <a
              href="https://wa.me/573013634888"
              target="_blank"
              class="flex flex-row items-center gap-2 text-gris font-inter text-md font-light hover:text-dorado transition"
              aria-label="WhatsApp"
            >
              <svg class="w-6 h-6 p-1 bg-dorado rounded-xl">
                <use href="../icons/sprite.svg#whatsapp"></use>
              </svg>

              <span class="text-gris font-inter text-md font-light"
                >WhatsApp</span
              >
            </a>
          </nav>
        </li>

        <li
          class="hover:bg-dorado rounded-xl p-1 transition duration-200 [&:hover>nav>a>span]:text-principal"
        >
          <nav>
            <a
              href="tel:+573013634888"
              class="flex flex-row items-center gap-2 text-gris font-inter text-md font-light hover:text-dorado transition"
              aria-label="Phone"
            >
              <svg class="w-6 h-6 p-1 bg-dorado rounded-xl">
                <use href="../icons/sprite.svg#phone"></use>
              </svg>

              <span class="text-gris font-inter text-md font-light"
                >+00 000 00000</span
              >
            </a>
          </nav>
        </li>

        <li
          class="hover:bg-dorado rounded-xl p-1 transition duration-200 [&:hover>nav>a>span]:text-principal"
        >
          <nav>
            <a
              href="/"
              class="flex flex-row items-center gap-2 text-gris font-inter text-md font-light hover:text-dorado transition"
              aria-label="Instagram"
            >
              <svg class="w-6 h-6 p-1 bg-dorado rounded-xl">
                <use href="../icons/sprite.svg#instagram"></use>
              </svg>

              <span class="text-gris font-inter text-md font-light"
                >@catalina_romo_peluqueria</span
              >
            </a>
          </nav>
        </li>

        <li
          class="hover:bg-dorado rounded-xl p-1 transition duration-200 [&:hover>nav>a>span]:text-principal"
        >
          <nav>
            <a
              href="/"
              class="flex flex-row items-center gap-2 text-gris font-inter text-md font-light hover:text-dorado transition"
              aria-label="Facebook"
            >
              <svg class="w-6 h-6 p-1 bg-dorado rounded-xl">
                <use href="../icons/sprite.svg#facebook"></use>
              </svg>

              <span class="text-gris font-inter text-md font-light"
                >Peluqueria Catalina Romo</span
              >
            </a>
          </nav>
        </li>
      </ul>

      <h3 class="text-dorado font-playfair text-xl">Direcci√≥n</h3>
      <p class="text-gris font-inter text-md font-light">
        Pasaje Tacna #538, Pudahuel, Santiago, Chile
      </p>

      <a
        href="https://maps.google.com/?q=Tacna+538,+9060075+Pudahuel,+Regi√≥n+Metropolitana,+Chile"
        target="_blank"
        rel="noopener noreferrer"
        class="inline-block px-5 py-3 border border-dorado text-dorado rounded hover:bg-dorado hover:text-principal transition text-center"
      >
        üìç Ver en Google Maps</a
      >
    </div>
  </div>
</section>

<script>
  const form = document.querySelector("form");

  form?.addEventListener("submit", (e) => {
    e.preventDefault();

    let isValid = true;

    form.querySelectorAll("input, textarea").forEach((field) => {
      const input = field as HTMLInputElement | HTMLTextAreaElement;
      const errorMsg = input.nextElementSibling;

      if (!input.checkValidity()) {
        errorMsg?.classList.remove("hidden");
        isValid = false;
      } else {
        errorMsg?.classList.add("hidden");
      }
    });

    if (isValid) {
      form.reset();
      showToast();
    }
  });

  const inputName = document.getElementById("name") as HTMLInputElement;
  const inputEmail = document.getElementById("email") as HTMLInputElement;
  const inputMessage = document.getElementById("message") as HTMLInputElement;

  // Real-time validation for Name field
  inputName?.addEventListener("input", () => {
    const errorMsg = inputName.nextElementSibling as HTMLElement;
    const value = inputName.value.trim();

    if (value.length > 0) {
      if (value.length === 1) {
        errorMsg.textContent = "Ingresar nombre v√°lido";
      } else {
        inputName.nextElementSibling?.classList.add("hidden");
      }
    } else {
      errorMsg.classList.remove("hidden");
      errorMsg.textContent = "Por favor ingresa tu nombre";
    }
  });

  //Real-time validation for Email field
  inputEmail?.addEventListener("input", () => {
    const errorMsg = inputEmail.nextElementSibling as HTMLElement;
    const value = inputEmail.value.trim();

    if (value.length === 0) {
      errorMsg.textContent = "Por favor ingresa tu Email";
      errorMsg.classList.remove("hidden");
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value)) {
      errorMsg.textContent = "Correo inv√°lido";
      errorMsg.classList.remove("hidden");
    } else {
      errorMsg.classList.add("hidden");
    }
  });

  //Real-time validation for Message field
  inputMessage?.addEventListener("input", () => {
    const errorMsg = inputMessage.nextElementSibling as HTMLElement;
    const value = inputMessage.value.trim();

    if (value.length === 0) {
      errorMsg.textContent = "Por favor ingresa tu mensaje";
      errorMsg.classList.remove("hidden");
    } else if (value.length < 10) {
      errorMsg.textContent = "El mensaje debe tener al menos 10 caracteres";
      errorMsg.classList.remove("hidden");
    } else {
      errorMsg.classList.add("hidden");
    }
  });

  function showToast() {
    const toast = document.getElementById("success-message") as HTMLElement;
    toast.classList.remove("hidden");
    requestAnimationFrame(() => toast.classList.remove("opacity-0"));

    setTimeout(() => {
      toast.classList.add("opacity-0");
      setTimeout(() => toast.classList.add("hidden"), 500);
    }, 4000);
  }
</script>
